name: Deploy docker image to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password1!
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }} # AWS 리전 설정

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          TEST_DB_URL: jdbc:mysql://host.docker.internal:3306/testdb?serverTimezone=UTC&characterEncoding=UTF-8
          TEST_DB_USERNAME: root
          TEST_DB_PASSWORD: password1!
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: goojeans-webide
        run: |
          docker-compose build
          docker-compose push

      - name: Generate Dockerrun.aws.json
        run: |
          echo '{"AWSEBDockerrunVersion": "2", "containerDefinitions": [{"name": "web", "image": "${{ secrets.AWS_ECR_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/goojeans-webide:latest", "essential": true, "memory": 512, "portMappings": [{"hostPort": 80, "containerPort": 80}]}]}' > Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION }}
          environment_name: ${{ secrets.EB_ENVIRONMENT }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: Dockerrun.aws.json
